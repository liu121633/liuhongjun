<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.liuhongjun.repository.BlogArticleMapper" >
  <resultMap id="BaseResultMap" type="org.liuhongjun.domain.dao.BlogArticle" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="Vision" property="vision" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="ModifyTime" property="modifytime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.liuhongjun.domain.dao.BlogArticle" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, title, Vision, CreateTime, ModifyTime
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="org.liuhongjun.domain.dao.BlogArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.liuhongjun.domain.dao.BlogArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_article
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_article
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.liuhongjun.domain.dao.BlogArticleExample" >
    delete from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.liuhongjun.domain.dao.BlogArticle" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_article (title, Vision, CreateTime, ModifyTime, content
      )
    values (#{title,jdbcType=VARCHAR}, 1,  now(),  now(), #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <select id="countByExample" parameterType="org.liuhongjun.domain.dao.BlogArticleExample" resultType="java.lang.Integer" >
    select count(*) from blog_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog_article
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.vision != null" >
        Vision = #{record.vision,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifytime != null" >
        ModifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blog_article
    set Id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      Vision = #{record.vision,jdbcType=INTEGER},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      ModifyTime = #{record.modifytime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog_article
    set Id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      Vision = #{record.vision,jdbcType=INTEGER},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      ModifyTime = #{record.modifytime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.liuhongjun.domain.dao.BlogArticle" >
    update blog_article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      Vision = Vision+1,
      ModifyTime =  now(),
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where  Vision = #{vision,jdbcType=INTEGER} and   Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.liuhongjun.domain.dao.BlogArticle" >
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      Vision = #{vision,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.liuhongjun.domain.dao.BlogArticle" >
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      Vision = Vision+1,
      ModifyTime =  now()
    where Vision = #{vision,jdbcType=INTEGER} and   Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>